<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>overview on Will Schenk</title>
    <link>https://willschenk.com/tags/overview/</link>
    <description>Recent content in overview on Will Schenk</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 03 Jul 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://willschenk.com/tags/overview/feed.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Effigy, a distributed social data layer</title>
      <link>https://willschenk.com/articles/2020/effigy_social_data_layer/</link>
      <pubDate>Fri, 03 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://willschenk.com/articles/2020/effigy_social_data_layer/</guid>
      <description>I grew up in the world of BBSes, Usenet and to some extent UUCP before that. This was fun, a world wide network all built up by volunteers sharing. Since we are all carrying supercomputers around now with massive idle storage and bandwidth, let&amp;#39;s think about how we can recreate some of that fun, independent data sharing with modern web technologies, specifically Websockets and WebRTC. All you need is the computers that you already have with you.</description>
    </item>
    
    <item>
      <title>Leveraging disposability for exploration</title>
      <link>https://willschenk.com/articles/2020/leveraging_disposability_for_exploration/</link>
      <pubDate>Wed, 05 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://willschenk.com/articles/2020/leveraging_disposability_for_exploration/</guid>
      <description>I play around with a lot of technology to see what&amp;rsquo;s out there and keep myself current, especially trying to find simpler ways to do our work. One of the issues is that this can leave lots of stuff laying which can be messy. Here are some techniques I use to keep things under control.
There are two complementary principle&amp;rsquo;s that I focus on. One is reproducibility, and the other is disposibility.</description>
    </item>
    
    <item>
      <title>Why Short Term memory is a thing: forgetting as a creativeÂ act</title>
      <link>https://willschenk.com/articles/2017/why_short_term_memory_is_a_thing_forgetting_as_a_creative_act/</link>
      <pubDate>Wed, 08 Mar 2017 21:48:09 +0000</pubDate>
      
      <guid>https://willschenk.com/articles/2017/why_short_term_memory_is_a_thing_forgetting_as_a_creative_act/</guid>
      <description>Our new app TezLab pulls in data from your phone and your car to show you how to use your car better. It helps you understand your driving habits, how you use your battery, and shows you what other drivers are up to. In order to do this, we need fairly sophisticated ways of understanding the world.
  Here, again, the role of the active faculty of forgetfulness, a kind of guardian, a supervisor responsible for maintaining the psychic, tranquility label.</description>
    </item>
    
    <item>
      <title>Slow data and Fast Sites</title>
      <link>https://willschenk.com/articles/2015/slow-data-and-fast-sites/</link>
      <pubDate>Fri, 08 May 2015 00:00:00 +0000</pubDate>
      
      <guid>https://willschenk.com/articles/2015/slow-data-and-fast-sites/</guid>
      <description>This article walks through the motivations driving and benefits of using a the Seed Architecture for building performant websites using Middleman, React, and a seperate API server such as Parse. The benefits are:
 You get full SEO with a heavy client JavaScript site without having to do crazy things with PhantomJS or meta fragments. Hosting and operations become both cheap and doesn&amp;rsquo;t require a support team. Scaling out the system is mainly a bandwidth problem, and secondarily a API scaling problem for a subset of behavior.</description>
    </item>
    
    <item>
      <title>Why Engineers build crappy products</title>
      <link>https://willschenk.com/articles/2015/why-engineers-build-crappy-products/</link>
      <pubDate>Sat, 21 Feb 2015 00:00:00 +0000</pubDate>
      
      <guid>https://willschenk.com/articles/2015/why-engineers-build-crappy-products/</guid>
      <description>There&amp;rsquo;s a certain user interface that, when you first see it, screams out of you that it was designed by an engineer.
(via Daring Fireball User Interface of the Week)
Why does that happen? What is it in the nature of engineering or software development process that leads to user interfaces that are impossible for the users to actually use?
Perfect Storm of User Discontent The short version:
 The most interesting part of engineer&amp;rsquo;s jobs is the obsession with the possibilities in the solution space - all the cool shit you can make computers do.</description>
    </item>
    
    <item>
      <title>Bot Design Patterns</title>
      <link>https://willschenk.com/articles/2014/bot-design-patterns/</link>
      <pubDate>Tue, 11 Nov 2014 00:00:00 +0000</pubDate>
      
      <guid>https://willschenk.com/articles/2014/bot-design-patterns/</guid>
      <description>In the antediluvian days before Google found everything for us, personal software agents were going to continuously do our bidding in cyberspace, tracking down air fares, making stock trades and otherwise doing futuristic things that we soon wouldn&amp;rsquo;t be able to live without. The anxiety of Y2K rose and crested, and the messianic aura of agents was washed away by more centralized and effective solutions.
The aspirational residue did yield some nuggets, and the idea has found partial success in the form of the bot.</description>
    </item>
    
    <item>
      <title>Bootstrap: Advanced Grid Tricks</title>
      <link>https://willschenk.com/articles/2014/bootstrap-advanced-grid-tricks/</link>
      <pubDate>Mon, 03 Nov 2014 00:00:00 +0000</pubDate>
      
      <guid>https://willschenk.com/articles/2014/bootstrap-advanced-grid-tricks/</guid>
      <description>We are a big fan of Bootstrap here at HappyFunCorp. While there are some arguments to be made if Bootstrap in particular is all that, or if Foundation is better for a given thing, its clear that starting with some sort of CSS framework is smarter than trying to roll everything yourself. [1]
There are three major complaints with using bootstrap.
 All of the sites look the same. There are so many classes in the HTML where they don&amp;rsquo;t strictly belong It&amp;rsquo;s a whole bunch of stuff that you don&amp;rsquo;t need.</description>
    </item>
    
  </channel>
</rss>