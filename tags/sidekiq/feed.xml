<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sidekiq on Will Schenk</title>
    <link>https://willschenk.com/tags/sidekiq/</link>
    <description>Recent content in Sidekiq on Will Schenk</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 11 Jul 2016 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://willschenk.com/tags/sidekiq/feed.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Deploying ActionCable on Heroku with Sidekiq</title>
      <link>https://willschenk.com/articles/2016/deploying-actioncable-on-heroku/</link>
      <pubDate>Mon, 11 Jul 2016 00:00:00 +0000</pubDate>
      
      <guid>https://willschenk.com/articles/2016/deploying-actioncable-on-heroku/</guid>
      <description>ActionCable is WebSockets on rails. This lets you create realtime, interactive systems, where you can push data from one client to another client without reloading or polling. But how do we deploy it on heroku?
ActionCable is composed to two main parts: a javascript client library, and a backend pub/sub system built upon Redis. We&amp;rsquo;re also going to use ActiveJob to offload the publishing tasks from the main user thread, so we&amp;rsquo;ll also be setting up sidekiq.</description>
    </item>
    
  </channel>
</rss>