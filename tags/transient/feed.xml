<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>transient on Will Schenk</title><link>https://willschenk.com/tags/transient/</link><description>Recent content in transient on Will Schenk</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 16 Jun 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://willschenk.com/tags/transient/feed.xml" rel="self" type="application/rss+xml"/><item><title>Developing React Inside Docker</title><link>https://willschenk.com/articles/2020/developing_react_inside_docker/</link><pubDate>Tue, 16 Jun 2020 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2020/developing_react_inside_docker/</guid><description>Can we build a node application without installing node locally? We sure can! Lets walk through the process.
First make sure that docker is installed. This is handy if you are working on a remote server for example.
Bootstrap Then lets start building out the Dockerfile that we will use.
mkdir testapp cd testapp Create a Dockerfile.initial that has node:14 in it. Start up the container with Dockerfile.initial FROMnode:14WORKDIR/appCMD bash</description></item><item><title>Leveraging disposability for exploration</title><link>https://willschenk.com/articles/2020/leveraging_disposability_for_exploration/</link><pubDate>Wed, 05 Feb 2020 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2020/leveraging_disposability_for_exploration/</guid><description>I play around with a lot of technology to see what&amp;rsquo;s out there and keep myself current, especially trying to find simpler ways to do our work. One of the issues is that this can leave lots of stuff laying which can be messy. Here are some techniques I use to keep things under control.
There are two complementary principle&amp;rsquo;s that I focus on. One is reproducibility, and the other is disposibility.</description></item></channel></rss>