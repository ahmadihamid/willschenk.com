<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>npm, on Will Schenk</title><link>https://willschenk.com/tags/npm/</link><description>Recent content in npm, on Will Schenk</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 26 Oct 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://willschenk.com/tags/npm/feed.xml" rel="self" type="application/rss+xml"/><item><title>Release code diffs</title><link>https://willschenk.com/articles/2020/release_code_diffs/</link><pubDate>Mon, 26 Oct 2020 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2020/release_code_diffs/</guid><description>When tracking and upgrading software you want to have an idea of what changed. Looking at the readme is helpful, and projects that keep a changelog are polite and friendly, but it&amp;#39;s nice to actually get down to it and see what the changes actually are. Loading the repo and finding the tags We first need to look at where the code is from. In looking at gemfiles we found how to see what gem you are currently working with, and in looking and package.</description></item><item><title>Looking at package.json</title><link>https://willschenk.com/articles/2020/looking_at_packagejson/</link><pubDate>Tue, 13 Oct 2020 00:00:00 +0000</pubDate><guid>https://willschenk.com/articles/2020/looking_at_packagejson/</guid><description>Look at the dependencies First lets create a simple project and add a single module, in this case npm-api which will we use to access the main repository. npm init -y npm add npm-api And lets see what&amp;#39;s been installed in node_modules: ls -l node_modules | wc -l du -sh node_modules 68 12M node_modules 68 directories with 12M of code!</description></item></channel></rss>