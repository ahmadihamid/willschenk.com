<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hugo on Will Schenk</title>
    <link>https://willschenk.com/tags/hugo/</link>
    <description>Recent content in Hugo on Will Schenk</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 29 Oct 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://willschenk.com/tags/hugo/feed.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Automating hugo builds using CircleCI</title>
      <link>https://willschenk.com/articles/2018/automating_hugo_with_circleci/</link>
      <pubDate>Mon, 29 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://willschenk.com/articles/2018/automating_hugo_with_circleci/</guid>
      <description>Here&amp;rsquo;s a simple CircleCI configuration to pull down the latest version of your hugo site on GitHub commits, build it, and then push it to github pages.
Let&amp;rsquo;s set that up, following their documentation on how configure CircleCI to build static sites.
Create .circleci/config.yml
version:2jobs:build:branches:ignore:-gh-pagesdocker:-image:cibuilds/hugo:latestworking_directory:~/hugoenvironment:HUGO_BUILD_DIR:~/hugo/publicsteps:# install git-run:apkupdate&amp;amp;&amp;amp;apkaddgit# checkout the repository-checkout# install git submodules for managing third-party dependencies-run:gitsubmodulesync&amp;amp;&amp;amp;gitsubmoduleupdate--init# Link the public dir to the gh-pages branch-run:rm-fr$HUGO_BUILD_DIR&amp;amp;&amp;amp;gitworktreeadd-Bgh-pages$HUGO_BUILD_DIRorigin/gh-pages# build with Hugo-run:HUGO_ENV=productionhugo-v-d$HUGO_BUILD_DIR# Set some variables to add to the commit message-run:gitconfig--globaluser.</description>
    </item>
    
    <item>
      <title>Adding a CMS to hugo</title>
      <link>https://willschenk.com/articles/2018/adding_a_cms_to_hugo/</link>
      <pubDate>Sat, 27 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://willschenk.com/articles/2018/adding_a_cms_to_hugo/</guid>
      <description>Just because we have a static site doesn&amp;rsquo;t mean that we can&amp;rsquo;t have an admin tool to write and edit posts! Lets go through how we can add the NetlifyCMS to the site and host it wherever we want.
In my case I&amp;rsquo;m storing the code on GitHub and also serving the pages from GitHub Pages. Netlify also seems like a really promising company with a number of other services that they offer, so I&amp;rsquo;d encourage you to check it out.</description>
    </item>
    
    <item>
      <title>Building a hugo site and theme with Bootstrap</title>
      <link>https://willschenk.com/articles/2018/building-a-hugo-site/</link>
      <pubDate>Sun, 21 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://willschenk.com/articles/2018/building-a-hugo-site/</guid>
      <description>Now that&amp;rsquo;s its 2018 its time to retool the blog using hugo. Why not? Hugo is built in golang and is blazing fast and everything is cleaner than it was in the middleman years.
One of the reasons that I liked middleman &amp;ndash; it&amp;rsquo;s usage of the rails&amp;rsquo; Sprockets library &amp;ndash; is no longer a strength. The javascript and front-end world has moved over to WebPack and I&amp;rsquo;ve personally moved over to create-react-app.</description>
    </item>
    
  </channel>
</rss>