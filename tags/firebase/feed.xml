<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>firebase on Will Schenk</title>
    <link>https://willschenk.com/tags/firebase/</link>
    <description>Recent content in firebase on Will Schenk</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 23 Nov 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://willschenk.com/tags/firebase/feed.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Image Manipulation in Firebase</title>
      <link>https://willschenk.com/articles/2018/image_manipulation_in_firebase/</link>
      <pubDate>Fri, 23 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://willschenk.com/articles/2018/image_manipulation_in_firebase/</guid>
      <description>We can manipulate images using JavaScript directly, which can be run both on the server or browser environment. Lets take a look at how we&amp;rsquo;d do this using create-react-app and firebase. We will deploy a function on firebase that will download the user&amp;rsquo;s avatar, manipulate the image and overlay it with a mask, and then spit out an image.
Project Setup First make sure that you have nvm installed. We&amp;rsquo;ll need a different version of node for create-react-app then we will for firebase functions.</description>
    </item>
    
    <item>
      <title>Implementing Serverless OAuth</title>
      <link>https://willschenk.com/articles/2018/implementing_serverless_oauth/</link>
      <pubDate>Mon, 12 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://willschenk.com/articles/2018/implementing_serverless_oauth/</guid>
      <description>Most of the serverless platforms have their own forms of authentication, but it might not support the specific service that you are looking to use. Lets go through how we can build a react single page app, hosting on firebase, that talks to the unsplash service directly. It will be hosted on firebase stoage, and with a tiny bit of firebase functions to tie it together.
How oauth works Here is the overall process:</description>
    </item>
    
  </channel>
</rss>