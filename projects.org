* TezLab 
- Convert to hooks
- Convert to pika
- https://www.react-simple-maps.io/with-victory
- react-globe
* ipfs pubsub
** Setup ipfs node on remote machine
- Original 
docker run -d --name ipfs_host -e IPFS_PROFILE=server -v $ipfs_staging:/export -v $ipfs_data:/data/ipfs -p 4001:4001 -p 127.0.0.1:8080:8080 -p 127.0.0.1:5001:5001 ipfs/go-ipfs:latest

- Without mounts
docker run -d --name ipfs_host -e IPFS_PROFILE=server -p 4001:4001 -p 127.0.0.1:8080:8080 -p 127.0.0.1:5001:5001 ipfs/go-ipfs:latest

- Logs
docker logs -f ipfs_host

- See if it connects to peers
docker exec ipfs_host ipfs swarm peers

- See if it can get some ipfs data

curl http://127.0.0.1:8080/ipfs/QmPChd2hVbrJ6bfo3WBcTW4iZnpHm8TEzWkLHmLpXhF68A

- Finding your local ip address
dig +short myip.opendns.com @resolver1.opendns.com

** Configure websockets
Turn on websocket and relayhop

docker exec ipfs_host ipfs config Addresses.Swarm '["/ip4/0.0.0.0/tcp/4001", "/ip4/0.0.0.0/tcp/8081/ws", "/ip6/::/tcp/4001"]' --json
docker exec ipfs_host ipfs config --bool Swarm.EnableRelayHop true 
docker exec ipfs_host ipfs config --bool Swarm.EnableAutoNATService true

** Bash code that talks to the local instance
** Write node code that runs on the server to publish
** Write code that runs in the web browser to publish/receive
* IPFS based archives/backups
** Rings of data
- carrying data around for transport
- connecting with local devices/pubs
- event based data (movies/tv shows)
- cached/lru data (music)
- incoming feeds
- archival data
** Device types
- summer base
- winter base
- vacation base
- office base
- airbnb base
- mobile device in your pocket (travel mode) (daily mode)
- guest laptop
** Setup keys to see who you are
- effigy
- hostkeys
- webkeys
** Connect to your server
** Setup publishing/watching

* jsipfs
** setting up node
** container with jsipfs
*** Dockerfile
put everything in /app
expose 4002, 4003, 5002, 9090

vi Dockerfile && docker build . -t wschenk/jsipfs && docker run --network host -it --rm wschenk/jsipfs bash
*** init

docker run --network host -it --rm wschenk/jsipfs bash

jsipfs init

DEBUG=* jsipfs daemon&
jsipfs swarm peers


- Dockerfile
- docker-compose.yml
- looking at peers
- adding a file
- pulling down a file
- pinning
* elevty site generator
* Hosting
- Inspired by https://github.com/fpereiro/backendlore

** Raw SSH config on VPS
** Manual docker on VPS
** Dokku
** Heroku
** CloudRun
