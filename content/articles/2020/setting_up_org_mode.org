#+title: Setting up Org Mode
#+subtitle: why people use emacs
#+date: 2020-06-16
#+tags: howto, emacs
#+draft: true

*  Quick Basics

org-mode is a powerful system for note taking and organizing those
notes.  It's just text.  It's a system with building blocks for you to
build whatever workflow you find useful and important. Lets look at
some quick features.

* TODO Configuring =.emacs=

Install =org-bullets= and =org-tempo=

** Keys

#+BEGIN_SRC emacs-lisp
(global-set-key (kbd "C-c l") 'org-store-link)
(global-set-key (kbd "C-c a") 'org-agenda)
(global-set-key (kbd "C-c c") 'org-capture)


(bind-key "M-<UP>" 'org-move-subtree-up)
(define-key org-mode-map (kbd "M-S-<UP>") 'org-shiftmetaup)
(define-key org-mode-map (kbd "M-S-<DOWN>") 'org-shiftmetadown)
(define-key org-mode-map (kbd "M-<UP>") 'org-move-subtree-up)
(define-key org-mode-map (kbd "M-<DOWN>") 'org-move-subtree-down)
#+END_SRC

** Additional functionality 
We can add some short cuts using [[https://orgmode.org/manual/Structure-Templates.html][Structure Templates]]. 

#+begin_src emacs-lisp
(require 'org-tempo)
#+end_src

And then you can type =<sTAB= at the begining of a line to get a source
block for example.

** Appearance
#+begin_src emacs-lisp

(with-eval-after-load 'org
  (org-bullets-mode 1) ; Make the bullets look nicer
  (setq org-startup-indented t) ; Enable `org-indent-mode' by default
  (setq org-log-done t) ; Set time for when things were completed
  (setq org-hide-emphasis-markers t) ; Not show typographical commands
  )
#+end_src

* TODO Linking

=C-c l= while you are floating around in your emacing,

=C-c C-l= to insert that link inside of org mode.

* Visibility
One thing that's nice is to be able to limit what you are seeing in
the page.

When on the Using =C-c C-x b= you can create a linked buffer that
just has what's in your view.  This is very nice since you don't need
to worry about how big the document is distracting you while editing.

When you are in that buffer, the same key strokes will bring you back
*** Great, love checks
- [ ] Lokos like a check
- 
*** Item 1
*** Item 2.

* TODO Setting up capture

#+BEGIN_SRC emacs-lisp
(setq org-capture-templates
      '(("t" "Todo" entry (file+headline "~/org/notes.org" "Tasks")
         "* TODO %?\n  %i\n  %a")
        ("j" "Journal" entry (file+datetree "~/org/journal.org")
         "* %?\nEntered on %U\n  %i\n  %a")))
#+END_SRC

* TODO Setting up agenda

=C-c a= Opens up agenda, but there's nothing there.  Lets open the =~/org/notes.org= file, and type =C-c [= to add it to the list.

Then we can do =C-c a n= to show all of the to do.

* TODO org-babel

Enable other languages other than elisp inside of =M-x configuration=.  Look for "Org Babel Load Languages" and then select which ones you'd like.

Turn on python, and then

#+NAME: with-rownames
| one | 1 | 2 | 3 | 4 |  5 |
| two | 6 | 7 | 8 | 9 | 10 |

#+BEGIN_SRC python :var tab=with-rownames :rownames yes
  return [[val + 10 for val in row] for row in tab]
#+END_SRC

#+RESULTS:
| one | 11 | 12 | 13 | 14 | 15 |
| two | 16 | 17 | 18 | 19 | 20 |



Or plotting

#+begin_src python :results file
import matplotlib, numpy
matplotlib.use('Agg')
import matplotlib.pyplot as plt
fig=plt.figure(figsize=(4,2))
x=numpy.linspace(-15,15)
plt.plot(numpy.sin(x)/x)
fig.tight_layout()
plt.savefig('images/python-matplot-fig.png')
return 'images/python-matplot-fig.png' # return filename to org-mode
#+end_src

#+RESULTS:
[[file:images/python-matplot-fig.png]]

* References

1. [[https://orgmode.org/worg/org-tutorials/orgtutorial_dto.html#:~:text=Introduction,step%20instructions%20and%20plentiful%20screenshots.][Org Tutorial]]
2. [[https://orgmode.org/manual/Capture-templates.html#Capture-templates][Capture Templates]]
3. [[https://orgmode.org/manual/Working-with-Source-Code.html#Working-with-Source-Code][Working with Source Code]]
4. [[https://orgmode.org/manual/Structure-Templates.html][Structure Templates]]
5. [[http://www.howardism.org/Technical/Emacs/capturing-intro.html][Org Capturing Introduction]]
6. [[https://irreal.org/blog/?p=8694][An Introduction to Org Capture]]
7. [[https://www.masteringemacs.org/article/mastering-key-bindings-emacs][Mastering Key Bindings Emacs]]
8. [[http://www.howardism.org/Technical/Emacs/orgmode-wordprocessor.html][Org as a Word Processor]]
9. https://sachachua.com/blog/2014/01/tips-learning-org-mode-emacs/
